# Generated by Django 5.1.6 on 2025-03-17 13:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photos_count', models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'db_table': 'categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['photos_count'], name='categories_photos__6f30eb_idx')],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('artwork_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('exhibition_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='curated_collections', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CollectionLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='photos.collection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'collection_likes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='liked_by',
            field=models.ManyToManyField(related_name='liked_collections', through='photos.CollectionLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos/%Y/%m/%d/')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=10, null=True)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('camera_info', models.JSONField(blank=True, null=True)),
                ('medium', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=4, null=True)),
                ('artist', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='photos', to='photos.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='cover_photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collections_as_cover', to='photos.photo'),
        ),
        migrations.AddField(
            model_name='collection',
            name='photos',
            field=models.ManyToManyField(related_name='collections', to='photos.photo'),
        ),
        migrations.CreateModel(
            name='PhotoComment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('likes_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='photos.photocomment')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='photos.photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'photo_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('download_type', models.CharField(choices=[('original', 'Original'), ('large', 'Large (1920x1080)'), ('medium', 'Medium (1280x720)'), ('small', 'Small (640x360)')], default='original', max_length=20)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='photos.photo')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'photo_downloads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='photos.photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'photo_likes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='liked_by',
            field=models.ManyToManyField(related_name='liked_photos', through='photos.PhotoLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photos_count', models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'tags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['photos_count'], name='tags_photos__73db1a_idx')],
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='tags',
            field=models.ManyToManyField(related_name='photos', to='photos.tag'),
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_follows',
            },
        ),
        migrations.AddIndex(
            model_name='collectionlike',
            index=models.Index(fields=['user', 'collection'], name='collection__user_id_1bd390_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collectionlike',
            unique_together={('user', 'collection')},
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['created_at'], name='photos_coll_created_e79e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['is_private'], name='photos_coll_is_priv_347d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['artwork_count'], name='photos_coll_artwork_63e1ad_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['views_count'], name='photos_coll_views_c_32a3ba_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['likes_count'], name='photos_coll_likes_c_3f011f_idx'),
        ),
        migrations.AddIndex(
            model_name='photocomment',
            index=models.Index(fields=['photo', '-created_at'], name='photo_comme_photo_i_f19758_idx'),
        ),
        migrations.AddIndex(
            model_name='photocomment',
            index=models.Index(fields=['parent', '-created_at'], name='photo_comme_parent__167d28_idx'),
        ),
        migrations.AddIndex(
            model_name='photodownload',
            index=models.Index(fields=['photo', '-created_at'], name='photo_downl_photo_i_618526_idx'),
        ),
        migrations.AddIndex(
            model_name='photodownload',
            index=models.Index(fields=['user', '-created_at'], name='photo_downl_user_id_6370d0_idx'),
        ),
        migrations.AddIndex(
            model_name='photolike',
            index=models.Index(fields=['user', 'photo'], name='photo_likes_user_id_51d14a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='photolike',
            unique_together={('user', 'photo')},
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['created_at'], name='photos_phot_created_84134a_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['is_featured'], name='photos_phot_is_feat_8a6571_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['likes_count'], name='photos_phot_likes_c_3807e3_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['views_count'], name='photos_phot_views_c_f8da22_idx'),
        ),
        migrations.AddIndex(
            model_name='userfollow',
            index=models.Index(fields=['follower', 'following'], name='user_follow_followe_5c66ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfollow',
            unique_together={('follower', 'following')},
        ),
    ]
